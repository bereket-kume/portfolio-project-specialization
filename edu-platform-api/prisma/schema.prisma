generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://localhost:27017/your-database"
}

model User {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String          @unique
  password            String
  role                Role            @default(USER)
  premiumStatus       Boolean         @default(false)
  sessionId           String?
  createdCommunities  Community[]     @relation("CreatedCommunities")
  joinedCommunities   UserCommunity[] 
  announcements       Announcement[]
  payments            Payment[]
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Community {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  creator           User          @relation(fields: [creatorId], references: [id], name: "CreatedCommunities")
  creatorId         String        @db.ObjectId
  members           UserCommunity[]
  isPremium         Boolean       @default(false)
  price             Float?
  announcements     Announcement[]
  payments          Payment[]
  createdAt         DateTime      @default(now())
}

model UserCommunity {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  user          User       @relation(fields: [userId], references: [id])
  userId        String     @db.ObjectId
  community     Community  @relation(fields: [communityId], references: [id])
  communityId   String     @db.ObjectId
  joinedAt      DateTime   @default(now())
}

model Announcement {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  content           String
  community         Community  @relation(fields: [communityId], references: [id])
  communityId       String     @db.ObjectId
  creator           User       @relation(fields: [creatorId], references: [id])
  creatorId         String     @db.ObjectId
  createdAt         DateTime   @default(now())
}

model Payment {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  user            User        @relation(fields: [userId], references: [id])
  userId          String      @db.ObjectId
  community       Community   @relation(fields: [communityId], references: [id])
  communityId     String      @db.ObjectId
  amount          Float
  status          String
  createdAt       DateTime    @default(now())
}
